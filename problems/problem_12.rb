#!/usr/bin/env ruby

# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
# ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

require 'prime'

def triangular_number(n)
  n * (n + 1) / 2
end

def number_of_divisors(number)
  powers = number.prime_division.map(&:last)
  powers.inject(1) { |a, e| a * (e + 1) }
end

index = 1
found = false

until found
  number = triangular_number(index)
  n_divisors = number_of_divisors(number)
  found = true if n_divisors > 500
  index += 1
end

puts number
